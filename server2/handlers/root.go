package handlers

import (
	"net/http"
	"path"
	"strings"

	_ "github.com/jackc/pgx/stdlib"
)

type Root struct {
	StaticHandler *Static
	//QuestionsHandler *QuestionsHandler
	//AuthHandler      *AuthHandler
}

func NewRoot() *Root {
	root := &Root{
		StaticHandler: &Static{},
	}
	return root
}

func (handler *Root) ServeHTTP(resp http.ResponseWriter, req *http.Request) {
	head, tail := shiftPath(req.URL.Path)
	if head == "qs" {
		req.URL.Path = tail
		//handler.QuestionsHandler.ServeHTTP(resp, req)
	} else if head == "auth" {
		req.URL.Path = tail
		//handler.AuthHandler.ServeHTTP(resp, req)
	} else {
		handler.StaticHandler.ServeHTTP(resp, req)
	}
}

// StaticHandler serves files generated by Svelte (in /public)
type Static struct{}

func (handler *Static) ServeHTTP(resp http.ResponseWriter, req *http.Request) {
	if req.URL.Path == "/" {
		http.ServeFile(resp, req, "public/index.html")
	} else {
		http.ServeFile(resp, req, "public"+req.URL.Path)
		// TODO: consider explicitly sending 404 if resources doesn't exist
	}
}

func shiftPath(p string) (head, tail string) {
	p = path.Clean("/" + p)
	i := strings.Index(p[1:], "/") + 1
	if i <= 0 {
		return p[1:], "/"
	}
	return p[1:i], p[i:]
}
